/*
 * Xero Files API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.xero.models.files;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.xero.models.files.ObjectGroup;
import com.xero.models.files.ObjectType;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;

import com.fasterxml.jackson.databind.annotation.JsonDeserialize;

/**
 * Association
 */

public class Association {
  
  @JsonProperty("FileId")
  private UUID fileId = null;

  
  @JsonProperty("ObjectId")
  private UUID objectId = null;

  
  @JsonProperty("ObjectGroup")
  private ObjectGroup objectGroup = null;

  
  @JsonProperty("ObjectType")
  private ObjectType objectType = null;

  public Association fileId(UUID fileId) {
    this.fileId = fileId;
    return this;
  }

   /**
   * The unique identifier of the file
   * @return fileId
  **/
  @ApiModelProperty(value = "The unique identifier of the file")
  public UUID getFileId() {
    return fileId;
  }

  public void setFileId(UUID fileId) {
    this.fileId = fileId;
  }

  public Association objectId(UUID objectId) {
    this.objectId = objectId;
    return this;
  }

   /**
   * The identifier of the object that the file is being associated with (e.g. InvoiceID, BankTransactionID, ContactID)
   * @return objectId
  **/
  @ApiModelProperty(value = "The identifier of the object that the file is being associated with (e.g. InvoiceID, BankTransactionID, ContactID)")
  public UUID getObjectId() {
    return objectId;
  }

  public void setObjectId(UUID objectId) {
    this.objectId = objectId;
  }

  public Association objectGroup(ObjectGroup objectGroup) {
    this.objectGroup = objectGroup;
    return this;
  }

   /**
   * Get objectGroup
   * @return objectGroup
  **/
  @ApiModelProperty(value = "")
  public ObjectGroup getObjectGroup() {
    return objectGroup;
  }

  public void setObjectGroup(ObjectGroup objectGroup) {
    this.objectGroup = objectGroup;
  }

  public Association objectType(ObjectType objectType) {
    this.objectType = objectType;
    return this;
  }

   /**
   * Get objectType
   * @return objectType
  **/
  @ApiModelProperty(value = "")
  public ObjectType getObjectType() {
    return objectType;
  }

  public void setObjectType(ObjectType objectType) {
    this.objectType = objectType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Association association = (Association) o;
    return Objects.equals(this.fileId, association.fileId) &&
        Objects.equals(this.objectId, association.objectId) &&
        Objects.equals(this.objectGroup, association.objectGroup) &&
        Objects.equals(this.objectType, association.objectType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fileId, objectId, objectGroup, objectType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Association {\n");
    
    sb.append("    fileId: ").append(toIndentedString(fileId)).append("\n");
    sb.append("    objectId: ").append(toIndentedString(objectId)).append("\n");
    sb.append("    objectGroup: ").append(toIndentedString(objectGroup)).append("\n");
    sb.append("    objectType: ").append(toIndentedString(objectType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

