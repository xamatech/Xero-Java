/*
 * Xero Files API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@xero.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.xero.models.files;

import java.util.Objects;
import java.util.Arrays;
import io.swagger.annotations.ApiModel;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * The Object Type
 */
public enum ObjectType {
  
  ACCOUNT("ACCOUNT"),
  
  ACCPAY("ACCPAY"),
  
  ACCPAYCREDIT("ACCPAYCREDIT"),
  
  ACCPAYPAYMENT("ACCPAYPAYMENT"),
  
  ACCREC("ACCREC"),
  
  ACCRECCREDIT("ACCRECCREDIT"),
  
  ACCRECPAYMENT("ACCRECPAYMENT"),
  
  ADJUSTMENT("ADJUSTMENT"),
  
  APCREDITPAYMENT("APCREDITPAYMENT"),
  
  APOVERPAYMENT("APOVERPAYMENT"),
  
  APOVERPAYMENTPAYMENT("APOVERPAYMENTPAYMENT"),
  
  APOVERPAYMENTSOURCEPAYMENT("APOVERPAYMENTSOURCEPAYMENT"),
  
  APPREPAYMENT("APPREPAYMENT"),
  
  APPREPAYMENTPAYMENT("APPREPAYMENTPAYMENT"),
  
  APPREPAYMENTSOURCEPAYMENT("APPREPAYMENTSOURCEPAYMENT"),
  
  ARCREDITPAYMENT("ARCREDITPAYMENT"),
  
  AROVERPAYMENT("AROVERPAYMENT"),
  
  AROVERPAYMENTPAYMENT("AROVERPAYMENTPAYMENT"),
  
  AROVERPAYMENTSOURCEPAYMENT("AROVERPAYMENTSOURCEPAYMENT"),
  
  ARPREPAYMENT("ARPREPAYMENT"),
  
  ARPREPAYMENTPAYMENT("ARPREPAYMENTPAYMENT"),
  
  ARPREPAYMENTSOURCEPAYMENT("ARPREPAYMENTSOURCEPAYMENT"),
  
  CASHPAID("CASHPAID"),
  
  CASHREC("CASHREC"),
  
  CONTACT("CONTACT"),
  
  EXPPAYMENT("EXPPAYMENT"),
  
  FIXEDASSET("FIXEDASSET"),
  
  MANUALJOURNAL("MANUALJOURNAL"),
  
  PAYRUN("PAYRUN"),
  
  PRICELISTITEM("PRICELISTITEM"),
  
  PURCHASEORDER("PURCHASEORDER"),
  
  RECEIPT("RECEIPT"),
  
  TRANSFER("TRANSFER");

  private String value;

  ObjectType(String value) {
    this.value = value;
  }

  @JsonValue
  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  @JsonCreator
  public static ObjectType fromValue(String text) {
    for (ObjectType b : ObjectType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + text + "'");
  }
}

